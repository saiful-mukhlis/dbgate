{"version":3,"file":"ErrorHandler-b6704367.js","sources":["../../node_modules/svelte/src/runtime/internal/globals.js","../../src/utility/ErrorHandler.svelte"],"sourcesContent":["/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","<script lang=\"ts\">\n  import localforage from 'localforage';\n  import _ from 'lodash';\n  import { TabDefinition } from '../stores';\n  import getElectron from './getElectron';\n\n  let counter = 0;\n  $: counterCopy = counter;\n\n  const onunhandledrejection = async e => {\n    console.log('Unhandler error, checking whether crashed', e);\n    const oldCounter = counter;\n    counter++;\n    window.setTimeout(async () => {\n      if (counterCopy <= oldCounter) {\n        console.log('CRASH DETECTED!!!');\n        const lastDbGateCrashJson = localStorage.getItem('lastDbGateCrash');\n        const lastDbGateCrash = lastDbGateCrashJson ? JSON.parse(lastDbGateCrashJson) : null;\n        // let detail = e?.reason?.stack || '';\n        // if (detail) detail = '\\n\\n' + detail;\n\n        if (lastDbGateCrash && new Date().getTime() - lastDbGateCrash < 30 * 1000) {\n          if (\n            window.confirm(\n              'Sorry, DbGate has crashed again.\\nDo you want to close all tabs in order to avoid crashing after next reload?\\nYou can reopen closed tabs in closed tabs history.'\n            )\n          ) {\n            try {\n              let openedTabs = (await localforage.getItem<TabDefinition[]>('openedTabs')) || [];\n              if (!_.isArray(openedTabs)) openedTabs = [];\n              openedTabs = openedTabs\n                .map(tab => (tab.closedTime ? tab : { ...tab, closedTime: new Date().getTime() }))\n                .map(tab => ({ ...tab, selected: false }));\n              await localforage.setItem('openedTabs', openedTabs);\n              await localStorage.setItem('selectedWidget', 'history');\n            } catch (err) {\n              localforage.removeItem('openedTabs');\n            }\n            // try {\n            //   await localforage.clear();\n            // } catch (err) {\n            //   console.error('Error clearing app data', err);\n            // }\n            window.location.reload();\n          } else {\n            getElectron()?.send('open-dev-tools');\n          }\n        } else {\n          if (\n            window.confirm(\n              'Sorry, DbGate has crashed.\\nPress OK for reload application\\nPress Cancel and inspect Console in Developer tools for error details'\n            )\n          ) {\n            localStorage.setItem('lastDbGateCrash', JSON.stringify(new Date().getTime()));\n            window.location.reload();\n          } else {\n            getElectron()?.send('open-dev-tools');\n          }\n        }\n      }\n    }, 500);\n  };\n</script>\n\n<svelte:window on:unhandledrejection={onunhandledrejection} />\n"],"names":["globals","ctx","__awaiter","thisArg","_arguments","P","generator"],"mappings":"gKACO,MAAMA,EACZ,OAAO,OAAW,IACf,OACA,OAAO,WAAe,IACtB,WAEA,2FCyDkCC,EAAoB,CAAA,CAAA,6DAhEzC,IAAAC,EAAA,MAAA,KAAA,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA;;;;","x_google_ignoreList":[0]}