{"version":3,"file":"SettingsModal-89547944.js","sources":["../../src/settings/SettingsModal.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import _ from 'lodash';\n  import FormStyledButton from '../buttons/FormStyledButton.svelte';\n  import Link from '../elements/Link.svelte';\n  import TabControl from '../elements/TabControl.svelte';\n  import CheckboxField from '../forms/CheckboxField.svelte';\n\n  import FormCheckboxField from '../forms/FormCheckboxField.svelte';\n  import FormFieldTemplateLarge from '../forms/FormFieldTemplateLarge.svelte';\n  import FormSelectField from '../forms/FormSelectField.svelte';\n  import FormTextField from '../forms/FormTextField.svelte';\n  import FormValues from '../forms/FormValues.svelte';\n  import SelectField from '../forms/SelectField.svelte';\n  import SettingsFormProvider from '../forms/SettingsFormProvider.svelte';\n  import TextField from '../forms/TextField.svelte';\n  import FontIcon from '../icons/FontIcon.svelte';\n\n  import ModalBase from '../modals/ModalBase.svelte';\n  import { closeCurrentModal } from '../modals/modalTools';\n  import { EDITOR_THEMES, FONT_SIZES } from '../query/AceEditor.svelte';\n  import SqlEditor from '../query/SqlEditor.svelte';\n  import {\n    currentEditorFontSize,\n    currentEditorTheme,\n    extensions,\n    selectedWidget,\n    lockedDatabaseMode,\n    visibleWidgetSideBar,\n  } from '../stores';\n  import { isMac } from '../utility/common';\n  import getElectron from '../utility/getElectron';\n  import ThemeSkeleton from './ThemeSkeleton.svelte';\n\n  const electron = getElectron();\n  let restartWarning = false;\n\n  export let selectedTab = 0;\n\n  const sqlPreview = `-- example query\nSELECT\n  MAX(Album.AlbumId) AS max_album,\n  MAX(Album.Title) AS max_title,\n  Artist.ArtistId,\n  'album' AS test_string,\n  123 AS test_number\nFROM\n  Album\n  INNER JOIN Artist ON Album.ArtistId = Artist.ArtistId\nGROUP BY\n  Artist.ArtistId\nORDER BY\n  Artist.Name ASC\n  `;\n\n  function openThemePlugins() {\n    closeCurrentModal();\n    $selectedWidget = 'plugins';\n    $visibleWidgetSideBar = true;\n  }\n</script>\n\n<SettingsFormProvider>\n  <ModalBase {...$$restProps} noPadding>\n    <div slot=\"header\">Settings</div>\n\n    <FormValues let:values>\n      <TabControl\n        bind:value={selectedTab}\n        isInline\n        tabs={[\n          { label: 'General', slot: 1 },\n          { label: 'Connection', slot: 2 },\n          { label: 'Themes', slot: 3 },\n          { label: 'Default Actions', slot: 4 },\n          { label: 'Confirmations', slot: 5 },\n        ]}\n      >\n        <svelte:fragment slot=\"1\">\n          {#if electron}\n            <div class=\"heading\">Appearance</div>\n            <FormCheckboxField\n              name=\"app.useNativeMenu\"\n              label={isMac() ? 'Use native window title' : 'Use system native menu'}\n              on:change={() => {\n                restartWarning = true;\n              }}\n            />\n            {#if restartWarning}\n              <div class=\"ml-5 mb-3\">\n                <FontIcon icon=\"img warn\" /> Native menu settings will be applied after app restart\n              </div>\n            {/if}\n          {/if}\n\n          <div class=\"heading\">Data grid</div>\n          <FormTextField\n            name=\"dataGrid.pageSize\"\n            label=\"Page size (number of rows for incremental loading, must be between 5 and 1000)\"\n            defaultValue=\"100\"\n          />\n          <FormCheckboxField name=\"dataGrid.showHintColumns\" label=\"Show foreign key hints\" defaultValue={true} />\n          <!-- <FormCheckboxField name=\"dataGrid.showHintColumns\" label=\"Show foreign key hints\" defaultValue={true} /> -->\n\n          <FormCheckboxField name=\"dataGrid.thousandsSeparator\" label=\"Use thousands separator for numbers\" />\n\n          <FormTextField\n            name=\"dataGrid.defaultAutoRefreshInterval\"\n            label=\"Default grid auto refresh interval in seconds\"\n            defaultValue=\"10\"\n          />\n\n          <div class=\"heading\">SQL editor</div>\n          <FormSelectField\n            label=\"SQL commands case\"\n            name=\"sqlEditor.sqlCommandsCase\"\n            isNative\n            defaultValue=\"upperCase\"\n            options={[\n              { value: 'upperCase', label: 'UPPER CASE' },\n              { value: 'lowerCase', label: 'lower case' },\n            ]}\n          />\n        </svelte:fragment>\n        <svelte:fragment slot=\"2\">\n          <div class=\"heading\">Connection</div>\n\n          <FormFieldTemplateLarge\n            label=\"Show only tabs from selected database\"\n            type=\"checkbox\"\n            labelProps={{\n              onClick: () => {\n                $lockedDatabaseMode = !$lockedDatabaseMode;\n              },\n            }}\n          >\n            <CheckboxField checked={$lockedDatabaseMode} on:change={e => ($lockedDatabaseMode = e.target.checked)} />\n          </FormFieldTemplateLarge>\n\n          <FormCheckboxField\n            name=\"connection.autoRefresh\"\n            label=\"Automatic refresh of database model on background\"\n            defaultValue={false}\n          />\n          <FormTextField\n            name=\"connection.autoRefreshInterval\"\n            label=\"Interval between automatic DB structure reloads in seconds\"\n            defaultValue=\"30\"\n            disabled={values['connection.autoRefresh'] === false}\n          />\n\n          <div class=\"heading\">Query sessions</div>\n          <FormCheckboxField\n            name=\"session.autoClose\"\n            label=\"Automatic close query sessions after period without any activity\"\n            defaultValue={true}\n          />\n          <FormTextField\n            name=\"session.autoCloseTimeout\"\n            label=\"Interval, after which query session without activity is closed (in minutes)\"\n            defaultValue=\"15\"\n            disabled={values['session.autoClose'] === false}\n          />\n        </svelte:fragment>\n\n        <svelte:fragment slot=\"3\">\n          <div class=\"heading\">Application theme</div>\n          <div class=\"themes\">\n            {#each $extensions.themes as theme}\n              <ThemeSkeleton {theme} />\n            {/each}\n          </div>\n\n          <div class=\"m-5\">\n            More themes are available as <Link onClick={openThemePlugins}>plugins</Link>\n            <br />\n            After installing theme plugin (try search \"theme\" in available extensions) new themes will be available here.\n          </div>\n\n          <div class=\"heading\">Editor theme</div>\n\n          <div class=\"flex\">\n            <div class=\"col-3\">\n              <FormFieldTemplateLarge label=\"Theme\" type=\"combo\">\n                <SelectField\n                  isNative\n                  notSelected=\"(use theme default)\"\n                  options={EDITOR_THEMES.map(theme => ({ label: theme, value: theme }))}\n                  value={$currentEditorTheme}\n                  on:change={e => ($currentEditorTheme = e.detail)}\n                />\n              </FormFieldTemplateLarge>\n            </div>\n\n            <div class=\"col-3\">\n              <FormFieldTemplateLarge label=\"Font size \" type=\"combo\">\n                <SelectField\n                  isNative\n                  notSelected=\"(default)\"\n                  options={FONT_SIZES}\n                  value={FONT_SIZES.find(x => x.value == $currentEditorFontSize) ? $currentEditorFontSize : 'custom'}\n                  on:change={e => ($currentEditorFontSize = e.detail)}\n                />\n              </FormFieldTemplateLarge>\n            </div>\n\n            <div class=\"col-3\">\n              <FormFieldTemplateLarge label=\"Custom size \" type=\"text\">\n                <TextField\n                  value={$currentEditorFontSize == 'custom' ? '' : $currentEditorFontSize}\n                  on:change={e => ($currentEditorFontSize = e.target['value'])}\n                  disabled={!!FONT_SIZES.find(x => x.value == $currentEditorFontSize) &&\n                    $currentEditorFontSize != 'custom'}\n                />\n              </FormFieldTemplateLarge>\n            </div>\n\n            <div class=\"col-3\">\n              <FormTextField name=\"editor.fontFamily\" label=\"Editor font family\" />\n            </div>\n          </div>\n\n          <div class=\"editor\">\n            <SqlEditor value={sqlPreview} readOnly />\n          </div>\n        </svelte:fragment>\n        <svelte:fragment slot=\"4\">\n          <div class=\"heading\">Default actions</div>\n          <FormSelectField\n            label=\"Connection click\"\n            name=\"defaultAction.connectionClick\"\n            isNative\n            defaultValue=\"connect\"\n            options={[\n              { value: 'openDetails', label: 'Edit / open details' },\n              { value: 'connect', label: 'Connect' },\n            ]}\n          />\n\n          <FormSelectField\n            label=\"Table click\"\n            name=\"defaultAction.dbObjectClick.tables\"\n            isNative\n            defaultValue=\"\"\n            options={[\n              { value: '', label: 'Open data, or open existing' },\n              { value: 'Open data', label: 'Open data (always new tab)' },\n              { value: 'Open form', label: 'Open form (always new tab)' },\n              { value: 'Open structure', label: 'Open structure' },\n              { value: 'SQL: CREATE TABLE', label: 'SQL: CREATE' },\n              { value: 'SQL: SELECT', label: 'SQL: SELECT' },\n            ]}\n          />\n\n          <FormSelectField\n            label=\"View click\"\n            name=\"defaultAction.dbObjectClick.views\"\n            isNative\n            defaultValue=\"\"\n            options={[\n              { value: '', label: 'Open data, or open existing' },\n              { value: 'Open data', label: 'Open data (always new tab)' },\n              { value: 'SQL: CREATE VIEW', label: 'SQL: CREATE' },\n            ]}\n          />\n\n          <FormSelectField\n            label=\"Materialized view click\"\n            name=\"defaultAction.dbObjectClick.matviews\"\n            isNative\n            defaultValue=\"\"\n            options={[\n              { value: '', label: 'Open data, or open existing' },\n              { value: 'Open data', label: 'Open data (always new tab)' },\n              { value: 'SQL: CREATE MATERIALIZED VIEW', label: 'SQL: CREATE' },\n            ]}\n          />\n\n          <FormSelectField\n            label=\"Procedure click\"\n            name=\"defaultAction.dbObjectClick.procedures\"\n            isNative\n            defaultValue=\"\"\n            options={[\n              { value: '', label: 'SQL: CREATE' },\n              { value: 'SQL: EXECUTE', label: 'SQL: EXECUTE' },\n              // { value: 'SQL: CREATE PROCEDURE', label: 'SQL: CREATE' },\n            ]}\n          />\n        </svelte:fragment>\n        <svelte:fragment slot=\"5\">\n          <div class=\"heading\">Confirmations</div>\n\n          <FormCheckboxField name=\"skipConfirm.tableDataSave\" label=\"Skip confirmation when saving table data (SQL)\" />\n          <FormCheckboxField\n            name=\"skipConfirm.collectionDataSave\"\n            label=\"Skip confirmation when saving collection data (NoSQL)\"\n          />\n        </svelte:fragment>\n      </TabControl>\n    </FormValues>\n\n    <div slot=\"footer\">\n      <!-- <FormSubmit value=\"OK\" on:click={handleOk} /> -->\n      <FormStyledButton value=\"Close\" on:click={closeCurrentModal} />\n    </div>\n  </ModalBase>\n</SettingsFormProvider>\n\n<style>\n  .heading {\n    font-size: 20px;\n    margin: 5px;\n    margin-left: var(--dim-large-form-margin);\n    margin-top: var(--dim-large-form-margin);\n  }\n\n  .themes {\n    overflow-x: scroll;\n    display: flex;\n  }\n\n  .editor {\n    position: relative;\n    height: 200px;\n    width: 400px;\n    margin-left: var(--dim-large-form-margin);\n  }\n</style>\n"],"names":["isMac","ctx","create_if_block_1","insert","target","div","anchor","create_if_block","div0","div1","if_block","dirty","EDITOR_THEMES","func","FONT_SIZES","selectfield_changes","textfield_changes","each_value","ensure_array_like","i","div2","append","br","div3","div8","div4","div5","div6","div7","div9","each_blocks","closeCurrentModal","modalbase_spread_levels","theme","change_handler","e","set_store_value","currentEditorTheme","$currentEditorTheme","func_1","x","$currentEditorFontSize","change_handler_1","currentEditorFontSize","func_2","change_handler_2","change_handler_3","$lockedDatabaseMode","lockedDatabaseMode","$$invalidate","restartWarning","selectedTab","value"],"mappings":"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"}