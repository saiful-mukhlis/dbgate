{"version":3,"file":"StatusBar-49e84339.js","sources":["../../src/widgets/StatusBar.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import _ from 'lodash';\n  import moment from 'moment';\n  import { showModal } from '../modals/modalTools';\n  import ChooseConnectionColorModal from '../modals/ChooseConnectionColorModal.svelte';\n\n  import FontIcon from '../icons/FontIcon.svelte';\n\n  import {\n    activeTabId,\n    currentArchive,\n    currentDatabase,\n    currentThemeDefinition,\n    selectedWidget,\n    visibleCommandPalette,\n  } from '../stores';\n  import getConnectionLabel from '../utility/getConnectionLabel';\n  import { useConnectionList, useDatabaseServerVersion, useDatabaseStatus } from '../utility/metadataLoaders';\n  import { findCommand } from '../commands/runCommand';\n  import { useConnectionColor } from '../utility/useConnectionColor';\n  import { apiCall } from '../utility/api';\n  import { statusBarTabInfo } from '../utility/statusBarStore';\n\n  $: databaseName = $currentDatabase && $currentDatabase.name;\n  $: connection = $currentDatabase && $currentDatabase.connection;\n  $: dbid = connection ? { conid: connection._id, database: databaseName } : null;\n  $: status = useDatabaseStatus(dbid || {});\n  $: serverVersion = useDatabaseServerVersion(dbid || {});\n\n  $: contextItems = $statusBarTabInfo[$activeTabId] as any[];\n  $: connectionLabel = getConnectionLabel(connection, { allowExplicitDatabase: false });\n\n  $: connectionBackground = useConnectionColor(dbid, 3, 'dark', true);\n  $: connectionButtonBackground = useConnectionColor(dbid ? { conid: dbid.conid } : null, 6, 'dark', true);\n  $: databaseButtonBackground = useConnectionColor(dbid, 6, 'dark', true, false);\n\n  let timerValue = 1;\n\n  setInterval(() => {\n    timerValue++;\n  }, 10000);\n\n  async function handleSyncModel() {\n    if (connection && databaseName) {\n      await apiCall('database-connections/sync-model', { conid: connection._id, database: databaseName });\n    }\n  }\n</script>\n\n<div class=\"main\" style={$connectionBackground}>\n  <div class=\"container\">\n    {#if databaseName}\n      <div class=\"item\">\n        {#if connection?.isReadOnly}\n          <FontIcon icon=\"icon lock\" padRight />\n        {:else}\n          <FontIcon icon=\"icon database\" padRight />\n        {/if}\n        {databaseName}\n      </div>\n      {#if dbid}\n        <div\n          class=\"item clickable\"\n          title=\"Database color. Overrides connection color\"\n          on:click={() => {\n            showModal(ChooseConnectionColorModal, {\n              ...dbid,\n              header: 'Choose database color',\n              text: 'This color override connection color for specific database.',\n            });\n          }}\n        >\n          <div style={$databaseButtonBackground} class=\"colorbox\">\n            <FontIcon icon=\"icon palette\" />\n          </div>\n        </div>\n      {/if}\n    {/if}\n    {#if connectionLabel}\n      <div class=\"item\">\n        <FontIcon icon=\"icon server\" padRight />\n        {connectionLabel}\n      </div>\n      {#if dbid}\n        <div\n          class=\"item clickable\"\n          title=\"Connection color. Can be overriden by database color\"\n          on:click={() => {\n            showModal(ChooseConnectionColorModal, {\n              conid: dbid.conid,\n              header: 'Choose connection color',\n              text: 'This color serves as default color for all databases in this connection.',\n            });\n          }}\n        >\n          <div style={$connectionButtonBackground} class=\"colorbox\">\n            <FontIcon icon=\"icon palette\" />\n          </div>\n        </div>\n      {/if}\n    {/if}\n    {#if connection && connection.user}\n      <div class=\"item\">\n        <FontIcon icon=\"icon account\" padRight />\n        {connection.user}\n      </div>\n    {/if}\n    {#if connection && $status}\n      <div class=\"item clickable\" on:click={() => visibleCommandPalette.set(findCommand('database.changeState'))}>\n        {#if $status.name == 'pending'}\n          <FontIcon icon=\"icon loading\" padRight /> Loading\n        {:else if $status.name == 'checkStructure'}\n          <FontIcon icon=\"icon loading\" padRight /> Checking model\n        {:else if $status.name == 'loadStructure'}\n          <FontIcon icon=\"icon loading\" padRight /> Loading model\n        {:else if $status.name == 'ok'}\n          <FontIcon icon=\"img ok-inv\" padRight /> Connected\n        {:else if $status.name == 'error'}\n          <FontIcon icon=\"img error-inv\" padRight /> Error\n        {/if}\n      </div>\n    {/if}\n    {#if !connection}\n      <div class=\"item\">\n        <FontIcon icon=\"icon disconnected\" padRight /> Not connected\n      </div>\n    {/if}\n    {#if $serverVersion}\n      <div class=\"item flex\" title={$serverVersion.version}>\n        <FontIcon icon=\"icon version\" padRight />\n        <div class=\"version\">\n          {$serverVersion.versionText || $serverVersion.version}\n        </div>\n      </div>\n    {/if}\n    {#if $status?.analysedTime}\n      <div\n        class=\"item flex clickable\"\n        title={`Last ${databaseName} model refresh: ${moment($status?.analysedTime).format(\n          'HH:mm:ss'\n        )}\\nClick for refresh DB model`}\n        on:click={handleSyncModel}\n      >\n        <FontIcon icon=\"icon history\" padRight />\n        <div class=\"version ml-1\">\n          {moment($status?.analysedTime).fromNow() + (timerValue ? '' : '')}\n        </div>\n      </div>\n    {/if}\n    {#if $currentArchive}\n      <div\n        class=\"item flex clickable\"\n        title=\"Current archive\"\n        on:click={() => {\n          $selectedWidget = 'archive';\n        }}\n      >\n        <FontIcon icon=\"icon archive\" padRight />\n        {$currentArchive}\n      </div>\n    {/if}\n  </div>\n  <div class=\"container\">\n    {#each contextItems || [] as item}\n      <div class=\"item\" class:clickable={item.clickable} on:click={item.onClick}>\n        {#if item.icon}\n          <FontIcon icon={item.icon} padRight />\n        {/if}\n        {item.text}\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .main {\n    display: flex;\n    color: var(--theme-font-inv-15);\n    align-items: stretch;\n    justify-content: space-between;\n    cursor: default;\n    flex: 1;\n  }\n  .container {\n    display: flex;\n    align-items: stretch;\n  }\n  .item {\n    padding: 0px 10px;\n    display: flex;\n    align-items: center;\n  }\n\n  .version {\n    max-width: 200px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .clickable {\n    cursor: pointer;\n  }\n  .clickable:hover {\n    background-color: var(--theme-bg-statusbar-inv-hover);\n  }\n\n  .colorbox {\n    padding: 0px 3px;\n    border-radius: 2px;\n    color: var(--theme-bg-statusbar-inv-font);\n    background: var(--theme-bg-statusbar-inv-bg);\n  }\n</style>\n"],"names":["_a","ctx","create_if_block_15","insert","target","div","anchor","div1","append","div0","create_if_block_13","t1_value","current","dirty","set_data","t1","attr","div1_title_value","moment","_b","fonticon_changes","if_block","create_if_block","toggle_class","is_function","create_if_block_14","create_if_block_12","create_if_block_11","if_block3","create_if_block_5","create_if_block_4","create_if_block_3","if_block6","create_if_block_2","create_if_block_1","i","div2","each_blocks","__awaiter","thisArg","_arguments","P","generator","showModal","ChooseConnectionColorModal","dbid","click_handler_2","visibleCommandPalette","findCommand","set_store_value","selectedWidget","$selectedWidget"],"mappings":"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"}