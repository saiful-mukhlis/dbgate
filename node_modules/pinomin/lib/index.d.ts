export interface Logger {
    trace(msg: string): any;
    trace(data: {} | Error, msg: string): any;
    debug(msg: string): any;
    debug(data: {} | Error, msg: string): any;
    info(msg: string): any;
    info(data: {} | Error, msg: string): any;
    warn(msg: string): any;
    warn(data: {} | Error, msg: string): any;
    error(msg: string): any;
    error(data: {} | Error, msg: string): any;
    fatal(msg: string): any;
    fatal(data: {} | Error, msg: string): any;
    child(childProps: {}): Logger;
    log(record: LogRecord): any;
}
export interface LogRecord {
    time: number;
    level: number;
    msg: string;
    pid?: number;
}
export declare const logLevelNames: {
    10: string;
    20: string;
    30: string;
    40: string;
    50: string;
    60: string;
};
export declare const logLevelNumbers: {
    trace: number;
    debug: number;
    info: number;
    warn: number;
    error: number;
    fatal: number;
};
export interface LogTargetConfig {
    level: keyof typeof logLevelNumbers;
    type: 'console' | 'stream';
    stream?: any;
}
export interface LogConfig {
    base: {};
    targets: LogTargetConfig[];
}
export declare function createLogger(config: LogConfig): Logger;
export default createLogger;
