"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const sql_data_1 = require("./sql-data");
const test_tools_1 = require("./test-tools");
test("Basic export", () => __awaiter(void 0, void 0, void 0, function* () {
    yield (0, test_tools_1.dumpTest)(sql_data_1.SIMPLE, (client) => __awaiter(void 0, void 0, void 0, function* () {
        const res = yield client.raw("select * from t1");
        expect(res.rows).toEqual(expect.arrayContaining([
            expect.objectContaining({
                id: 1,
                value: 2,
            }),
        ]));
    }));
}));
test("More tables", () => __awaiter(void 0, void 0, void 0, function* () {
    yield (0, test_tools_1.dumpTest)(sql_data_1.MORE_TABLES, (client) => __awaiter(void 0, void 0, void 0, function* () {
        const res1 = yield client.raw("select * from t1");
        expect(res1.rows).toEqual(expect.arrayContaining([
            expect.objectContaining({
                id: 1,
                value: 2,
            }),
        ]));
        const res2 = yield client.raw("select * from t2");
        expect(res2.rows).toEqual(expect.arrayContaining([
            expect.objectContaining({
                id: 3,
                value: 4,
            }),
        ]));
    }));
}));
test("Export view", () => __awaiter(void 0, void 0, void 0, function* () {
    yield (0, test_tools_1.dumpTest)(sql_data_1.VIEW, (client) => __awaiter(void 0, void 0, void 0, function* () {
        const res = yield client.raw("select * from v1");
        expect(res.rows).toEqual(expect.arrayContaining([
            expect.objectContaining({
                id: 1,
                value: 2,
            }),
        ]));
    }));
}));
test("Northwind test", () => __awaiter(void 0, void 0, void 0, function* () {
    const sql = fs_1.default.readFileSync("src/test/northwind.sql", { encoding: "utf-8" });
    yield (0, test_tools_1.dumpTest)(sql, (client) => __awaiter(void 0, void 0, void 0, function* () {
        const res = yield client.raw("select * from `Category Sales for 1997` where CategoryName='Beverages'");
        expect(res.rows).toEqual(expect.arrayContaining([
            expect.objectContaining({
                CategoryName: 'Beverages',
                CategorySales: 108545,
            }),
        ]));
    }));
}));
