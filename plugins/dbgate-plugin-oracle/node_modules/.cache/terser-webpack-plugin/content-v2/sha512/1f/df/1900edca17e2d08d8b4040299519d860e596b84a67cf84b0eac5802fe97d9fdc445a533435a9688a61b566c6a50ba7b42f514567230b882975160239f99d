{"code":"var plugin=function(e){var t={};function n(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(a,i,function(t){return e[t]}.bind(null,i));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1)}([function(e,t,n){const{driverBase:a}=window.DBGATE_TOOLS,i=n(2),{oracleSplitterOptions:l}=n(3),s=[\"GEOGRAPHY\"],r={rangeSelect:!1,limitSelect:!1,offsetFetchRangeSyntax:!0,ilike:!0,stringEscapeChar:\"'\",fallbackDataType:\"varchar\",anonymousPrimaryKey:!0,enableConstraintsPerTable:!0,dropColumnDependencies:[\"dependencies\"],quoteIdentifier:e=>'\"'+e+'\"',stringAgg:!0,createColumn:!0,dropColumn:!0,changeColumn:!0,createIndex:!0,dropIndex:!0,createForeignKey:!0,dropForeignKey:!0,createPrimaryKey:!0,dropPrimaryKey:!0,createUnique:!0,dropUnique:!0,createCheck:!0,dropCheck:!0,dropReferencesWhenDropTable:!0,predefinedDataTypes:[\"bigint\",\"bigserial\",\"bit\",\"varbit\",\"boolean\",\"box\",\"bytea\",\"char(20)\",\"varchar(250)\",\"cidr\",\"circle\",\"date\",\"double precision\",\"inet\",\"int\",\"interval\",\"json\",\"jsonb\",\"line\",\"lseg\",\"macaddr\",\"macaddr8\",\"money\",\"numeric(10,2)\",\"path\",\"pg_lsn\",\"pg_snapshot\",\"point\",\"polygon\",\"real\",\"smallint\",\"smallserial\",\"serial\",\"text\",\"time\",\"timetz\",\"timestamp\",\"timestamptz\",\"tsquery\",\"tsvector\",\"txid_snapshot\",\"uuid\",\"xml\"],createColumnViewExpression(e,t,n,a){if(t&&s.includes(t.toUpperCase()))return{exprType:\"call\",func:\"ST_AsText\",alias:a||e,args:[{exprType:\"column\",columnName:e,source:n}]}}},o={...{...a,dumperClass:i,dialect:r,getQuerySplitterOptions:()=>l,readOnlySessions:!0,databaseUrlPlaceholder:\"e.g. oracledb://user:password@localhost:1521\",showConnectionField:(e,t)=>\"useDatabaseUrl\"==e||(t.useDatabaseUrl?[\"databaseUrl\",\"isReadOnly\"].includes(e):[\"user\",\"password\",\"defaultDatabase\",\"singleDatabase\",\"isReadOnly\",\"server\",\"port\"].includes(e)),beforeConnectionSave:e=>{const{databaseUrl:t}=e;if(t){const n=t.match(/\\/([^/]+)($|\\?)/);return{...e,singleDatabase:!!n,defaultDatabase:n?n[1]:null}}return e},__analyserInternals:{refTableCond:\"\"},getNewObjectTemplates:()=>[{label:\"New view\",sql:\"CREATE VIEW myview\\nAS\\nSELECT * FROM table1\"},{label:\"New materialized view\",sql:\"CREATE MATERIALIZED VIEW myview\\nAS\\nSELECT * FROM table1\"},{label:\"New procedure\",sql:\"CREATE PROCEDURE myproc (arg1 INT)\\nLANGUAGE SQL\\nAS $$\\n  SELECT * FROM table1;\\n$$\"},{label:\"New function (plpgsql)\",sql:\"CREATE FUNCTION myfunc (arg1 INT)\\nRETURNS INT\\nAS $$\\nBEGIN\\n  RETURN 1;\\nEND\\n$$ LANGUAGE plpgsql;\"}]},engine:\"oracle@dbgate-plugin-oracle\",title:\"OracleDB (Experimental)\",defaultPort:1521,dialect:{...r,materializedViews:!0},dialectByVersion:e=>e?{...r,materializedViews:e&&null!=e.versionMajor&&null!=e.versionMinor&&(e.versionMajor>9||9==e.versionMajor||e.versionMinor>=3)}:r,showConnectionTab:e=>\"sshTunnel\"==e};e.exports=[o]},function(e,t,n){\"use strict\";n.r(t);var a=n(0),i=n.n(a);t.default={packageName:\"dbgate-plugin-oracle\",drivers:i()}},function(e,t){const{SqlDumper:n,arrayToHexString:a,testEqualTypes:i}=window.DBGATE_TOOLS;e.exports=class extends n{transform(e,t){switch(e){case\"GROUP:YEAR\":case\"YEAR\":this.put(\"^extract(^year ^from %c)\",t);break;case\"MONTH\":this.put(\"^extract(^month ^from %c)\",t);break;case\"DAY\":this.put(\"^extract(^day ^from %c)\",t);break;case\"GROUP:MONTH\":this.put(\"^to_char(%c, '%s')\",t,\"YYYY-MM\");break;case\"GROUP:DAY\":this.put(\"^to_char(%c, '%s')\",t,\"YYYY-MM-DD\");break;default:t()}}dropRecreatedTempTable(e){this.putCmd(\"^drop ^table %i ^cascade\",e)}renameTable(e,t){this.putCmd(\"^alter ^table %f ^rename ^to %i\",e,t)}renameColumn(e,t){this.putCmd(\"^alter ^table %f ^rename ^column %i ^to %i\",e,e.columnName,t)}dropTable(e,t={}){this.put(\"^drop ^table\"),t.testIfExists&&this.put(\" ^if ^exists\"),this.put(\" %f\",e),this.endCommand()}enableConstraints(e,t){this.putCmd(\"^alter ^table %f %k ^trigger ^all\",e,t?\"enable\":\"disable\")}columnDefinition(e,t){e.autoIncrement?this.put(\"^serial\"):super.columnDefinition(e,t)}changeColumn(e,t,n){e.columnName!=t.columnName&&this.putCmd(\"^alter ^table %f ^rename ^column %i ^to %i\",e,e.columnName,t.columnName),i(e,t)||this.putCmd(\"^alter ^table %f ^alter ^column %i ^type %s\",e,t.columnName,t.dataType),e.notNull!=t.notNull&&(t.notNull?this.putCmd(\"^alter ^table %f ^alter ^column %i ^set ^not ^null\",t,t.columnName):this.putCmd(\"^alter ^table %f ^alter ^column %i ^drop ^not ^null\",t,t.columnName)),e.defaultValue!=t.defaultValue&&(null==t.defaultValue?this.putCmd(\"^alter ^table %f ^alter ^column %i ^drop ^default\",t,t.columnName):this.putCmd(\"^alter ^table %f ^alter ^column %i ^set ^default %s\",t,t.columnName,t.defaultValue))}putValue(e){!0===e?this.putRaw(\"true\"):!1===e?this.putRaw(\"false\"):super.putValue(e)}putByteArrayValue(e){this.putRaw(`e'\\\\\\\\x${a(e)}'`)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.redisSplitterOptions=t.noSplitSplitterOptions=t.mongoSplitterOptions=t.sqliteSplitterOptions=t.postgreSplitterOptions=t.mssqlSplitterOptions=t.mysqlSplitterOptions=t.defaultSplitterOptions=void 0,t.defaultSplitterOptions={stringsBegins:[\"'\"],stringsEnds:{\"'\":\"'\"},stringEscapes:{\"'\":\"'\"},allowSemicolon:!0,allowCustomDelimiter:!1,allowGoDelimiter:!1,allowDollarDollarString:!1,noSplit:!1,doubleDashComments:!0,multilineComments:!0,javaScriptComments:!1,returnRichInfo:!1,splitByLines:!1,preventSingleLineSplit:!1,adaptiveGoSplit:!1,ignoreComments:!1},t.mysqlSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{allowCustomDelimiter:!0,stringsBegins:[\"'\",\"`\"],stringsEnds:{\"'\":\"'\",\"`\":\"`\"},stringEscapes:{\"'\":\"\\\\\",\"`\":\"`\"}}),t.mssqlSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{allowSemicolon:!1,allowGoDelimiter:!0,stringsBegins:[\"'\",\"[\"],stringsEnds:{\"'\":\"'\",\"[\":\"]\"},stringEscapes:{\"'\":\"'\"}}),t.postgreSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{allowDollarDollarString:!0,stringsBegins:[\"'\",'\"'],stringsEnds:{\"'\":\"'\",'\"':'\"'},stringEscapes:{\"'\":\"'\",'\"':'\"'}}),t.sqliteSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{stringsBegins:[\"'\",'\"'],stringsEnds:{\"'\":\"'\",'\"':'\"'},stringEscapes:{\"'\":\"'\",'\"':'\"'}}),t.mongoSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{stringsBegins:[\"'\",'\"'],stringsEnds:{\"'\":\"'\",'\"':'\"'},stringEscapes:{\"'\":\"\\\\\",'\"':\"\\\\\"}}),t.noSplitSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{noSplit:!0}),t.redisSplitterOptions=Object.assign(Object.assign({},t.defaultSplitterOptions),{splitByLines:!0})}]);","extractedComments":[]}